#!/bin/bash
#-----------------------------------------------------------------------------
# This script requires the following preconditions
#  . XD installed somewhere, e.g.,
#    > gradle build copyInstall -xtest -xjavaDoc
#  . The XD Gemfire Server must be (re-started), e.g., with output redirected to gemfire.out. The CI Server does something like the following where
#    <xd_dist_root> is where XD is installed or <xd_repo_root>/build/dist/spring-xd
#    > nohup <xd_dist_root>/gemfire/bin/gemfire-server "file:<xd_dist_root>/gemfire/config/cq-demo.xml" > gemfire.out 2>&1 < /dev/null &
#    > echo -n $! > gemfire.pid
#
#  . An XD SingleNode Server must be started.
#  > <xd_dist_root>/xd/bin/xd-singlenode
#
# Postconditions:
# If gemfire started successfully, kill the cache server, e.g.:
# > cat gemfire.pid | xargs kill -9
#
#----------------------------------------------------------------------------
. xdapi

wait_for_gemfire_server() {
  i=6

  while [ $i != 0 ]
  do
  	  status=`tail -1 gemfire.out`
  	  echo $status
      if [ "$status" != "cache server running" ]
      then
        echo "Waiting for Gemfire Cache Server to start..."; sleep 10
        ((i--))
      else
        i=0
      fi
  done
  if [ $? != 0 ]
  then
      echo -e "\n\n**** Gemfire Cache Server not started, exiting.\n\n"; exit 1
  else
      echo -e "\n\n**** Gemfire Cache Server is up...\n\n"
  fi
}

TEST_DIR=/tmp/xdtest/gemfire

wait_for_server

wait_for_gemfire_server

rm -R $TEST_DIR &> /dev/null
set -e

echo -e '*** Test 1. http | gemfire-server stream\n'

create_stream 'gftest' 'http | gemfire-server --regionName=Stocks' 'false'
deploy_stream 'gftest'
create_stream 'httptofile' "gemfire --regionName=Stocks | file --dir=$TEST_DIR" 'false'
deploy_stream 'httptofile'

post_data_and_check_result() {
  curl -d blah "$XD_HOST:9000"
  result=`cat $TEST_DIR/httptofile.out`

  if [[ $result != 'blah' ]]
  then
    echo -e "\nPosted HTTP data ($result) does not match file sink contents"
    exit 1
  fi
}

post_data_and_check_result

echo -e '\nAll Good :-)\n'

undeploy_stream 'gftest'
undeploy_stream 'httptofile'
