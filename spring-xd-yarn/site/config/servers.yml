# XD on YARN deployment configuration
#
# You can set properties here to override the defaults.
#

xd:
    adminServers: 1
    adminMemory: 512M
    containers: 3
    containerMemory: 512M
    container:
        groups: yarn

spring:
    yarn:
        applicationDir: /xd/app/

---

# YARN classpath settings -- in the next Spring XD release we hope to make this more auto-configured, but for now we need to provide the
# classpath that each distro uses for "yarn.application.classpath" and it should also include "mapreduce.application.classpath".
# Just comment out the ones not needed and make sure the one for your current distro is not commented out. These settings are based
# on single-node VMs provided for each distro and they might need tweaking for other installation types.

# Hadoop 2.2.x (hadoop22) and Hadoop 2.4.x (hadoop24):
spring:
    yarn:
        siteYarnAppClasspath: "$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/share/hadoop/common/*,$HADOOP_COMMON_HOME/share/hadoop/common/lib/*,$HADOOP_HDFS_HOME/share/hadoop/hdfs/*,$HADOOP_HDFS_HOME/share/hadoop/hdfs/lib/*,$HADOOP_YARN_HOME/share/hadoop/yarn/*,$HADOOP_YARN_HOME/share/hadoop/yarn/lib/*"
        siteMapreduceAppClasspath: "$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*,$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*"

# Pivotal HD 2.0 (phd20):
#spring:
#    yarn:
#        siteYarnAppClasspath: "$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/*,$HADOOP_HDFS_HOME/*,$HADOOP_YARN_HOME/*"
#        siteMapreduceAppClasspath: "$HADOOP_MAPRED_HOME/*,$HADOOP_MAPRED_HOME/lib/*"

# Hortonworks HDP 2.1 (hdp21):
#spring:
#    yarn:
#        siteYarnAppClasspath: "/etc/hadoop/conf,/usr/lib/hadoop/*,/usr/lib/hadoop/lib/*,/usr/lib/hadoop-hdfs/*,/usr/lib/hadoop-hdfs/lib/*,/usr/lib/hadoop-yarn/*,/usr/lib/hadoop-yarn/lib/*"
#        siteMapreduceAppClasspath: "/usr/lib/hadoop-mapreduce/*,/usr/lib/hadoop-mapreduce/lib/*"

# Cloudera CDH5 (cdh5):
#spring:
#    yarn:
#        siteYarnAppClasspath: "$HADOOP_CLIENT_CONF_DIR,$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/*,$HADOOP_COMMON_HOME/lib/*,$HADOOP_HDFS_HOME/*,$HADOOP_HDFS_HOME/lib/*,$HADOOP_YARN_HOME/*,$HADOOP_YARN_HOME/lib/*"
#        siteMapreduceAppClasspath: "$HADOOP_MAPRED_HOME/*,$HADOOP_MAPRED_HOME/lib/*"

---
# Hadoop properties
#spring:
#  hadoop:
#    fsUri: hdfs://localhost:8020
#    resourceManagerHost: localhost

---
#Zookeeper properties
# client connect string: host1:port1,host2:port2,...,hostN:portN
#zk:
#  client:
#     connect: localhost:2181

---

#XD data transport (default is redis for distributed, local for single node)
#xd:
#  transport: rabbit

#  messagebus:
#    rabbit:
#      default:
#        ackMode:                   AUTO
            # Valid: AUTO (container acks), NONE (broker acks), MANUAL (consumer acks).
            # Upper case only.
            # Note: MANUAL requires specialized code in the consuming module and is unlikely to be
            # used in an XD application. For more information, see
            # http://docs.spring.io/spring-integration/reference/html/amqp.html#amqp-inbound-ack
#        backOffInitialInterval:    1000
#        backOffMaxInterval:        10000
#        backOffMultiplier:         2.0
#        concurrency:               1
#        deliveryMode:              PERSISTENT
#        maxAttempts:               3
#        maxConcurrency:            1
#        prefix:                    xdbus.
            # prefix for queue/exchange names so policies (ha, dle etc.) can be applied
#        prefetch:                  1
#        replyHeaderPatterns:       STANDARD_REPLY_HEADERS,*
#        requestHeaderPatterns:     STANDARD_REQUEST_HEADERS,*
#        requeue:                   true
#        transacted:                false
#        txSize:                    1

#    redis:
#      default:
#        backOffInitialInterval:    1000
#        backOffMaxInterval:        10000
#        backOffMultiplier:         2.0
#        concurrency:               1
#        maxAttempts:               3

#Disable batch database initialization
#spring:
#  batch:
#    initializer:
#       enabled: false

---
#Configuration for database used for JDBC and Batch Repository
#
#Config for use with HSQLDB - uncomment and edit with relevant values for your environment
#spring:
#  datasource:
#    url: jdbc:hsqldb:hsql://yourDBhost:9001/yourDB
#    username: sa
#    password:
#    driverClassName: org.hsqldb.jdbc.JDBCDriver
#    validationQuery: select 1 from INFORMATION_SCHEMA.SYSTEM_USERS

#Config for use with MySQL - uncomment and edit with relevant values for your environment
#spring:
#  datasource:
#    url: jdbc:mysql://yourDBhost:3306/yourDB
#    username: yourUsername
#    password: yourPassword
#    driverClassName: com.mysql.jdbc.Driver
#    validationQuery: select 1

#Config for use with Postgres - uncomment and edit with relevant values for your environment
#spring:
#  datasource:
#    url: jdbc:postgresql://yourDBhost:5432/yourDB
#    username: yourUsername
#    password: yourPassword
#    driverClassName: org.postgresql.Driver
#    validationQuery: select 1

---
#ConnectionPoolSettings
#spring:
#  datasource:
#    testOnBorrow: true
#    validationInterval: 30000
#    maxActive: 100
#    maxIdle: 100
#    minIdle: 10
#    initialSize: 0
#    maxWait: 30000
#    testOnReturn: false
#    testWhileIdle: false
#    timeBetweenEvictionRunsMillis: 5000
#    minEvictableIdleTimeMillis: 60000
#    removeAbandoned: false
#    removeAbandonedTimeout: 60
#    logAbandoned: false
#Tomcat JDBC Enhanced Attributes
#    validationInterval: 30000
#    jmxEnabled: true
#    fairQueue: true
#    abandonWhenPercentageFull: 0
#    maxAge: 0
#    useEquals: true
#    suspectTimeout: 0
#    alternateUsernameAllowed: false

---
# Config to enable/disable JMX/jolokia endpoints
#XD_JMX_ENABLED: true
#endpoints:
#  jolokia:
#    enabled: ${XD_JMX_ENABLED:true}
#  jmx:
#    enabled: ${XD_JMX_ENABLED:true}
#    uniqueNames: true

---
# Redis properties
#spring:
#  redis:
#   port: 6379
#   host: localhost

#Port that admin-ui is listening on
#server:
#  port: 9393

---
# RabbitMQ properties
#spring:
#  rabbitmq:
#   addresses: localhost:5672
#   username: guest
#   password: guest
#   virtual_host: /
#   useSSL: false
#   sslProperties:

---
# User Extensions: Where XD scans the classpath to discover extended container configuration to add beans to the Plugins context.
# Each property may be a comma delimited string. 'basepackages' refers to package names used for
# annotated component (@Configuration or @Component stereotypes) scanning. 'locations' is a list of root resource directories containing XML or Groovy configuration. 
# XD prepends classpath:* if no prefix included and appends **/*.* to each location
#xd:
#  extensions:
#      basepackages: com.acme.xd.extensions
#      locations: META-INF/spring-xd/ext
---
