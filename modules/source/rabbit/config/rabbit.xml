<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<int-amqp:inbound-channel-adapter
		auto-startup="false"
		channel="output"
		listener-container="listenerContainer"
		message-converter="messageConverter" 
		mapped-request-headers="${mappedRequestHeaders}"
	/>
	

	<bean id="retryInterceptor" class="org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean">
    	<property name="messageRecoverer" ref="rejectAndDontRequeueRecoverer"/>
    	<property name="retryOperations" ref="retryTemplate" />
	</bean> 

	<bean id="rejectAndDontRequeueRecoverer" class="org.springframework.amqp.rabbit.retry.RejectAndDontRequeueRecoverer"/>

	<bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
    	<property name="backOffPolicy">
        	<bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
            	<property name="initialInterval" value="${initialInterval}" />
            	<property name="maxInterval" value="${maxInterval}" />
        	</bean>     
		</property>
		<property name="retryPolicy">
			<bean class="org.springframework.retry.policy.SimpleRetryPolicy">
				<property name="maxAttempts" value="${maxAttempts}" />
			</bean>     
    	</property>
	</bean>  

	<bean id="listenerContainer" class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
		<property name="connectionFactory" ref="rabbitConnectionFactory" />
		<property name="acknowledgeMode" value="#{T(org.springframework.amqp.core.AcknowledgeMode).${ackMode}}" />
		<property name="autoStartup" value="false" />
		<property name="channelTransacted" value="${transacted}" />
		<property name="concurrentConsumers" value="${concurrency}" />
		<property name="defaultRequeueRejected" value="${requeue}" />
		<property name="maxConcurrentConsumers" value="${maxConcurrency}" />
		<property name="prefetchCount" value="${prefetch}" />
		<property name="queues" ref="${queues}" />
		<property name="txSize" value="${txSize}" />
		<property name="adviceChain" ref="retryInterceptor"/>
	</bean>
	
	<rabbit:queue name="${queues}" declared-by="containerAdmin">
    	<rabbit:queue-arguments> 
        	<entry key="x-dead-letter-exchange" value="dlx"/>
        	<entry key="x-message-ttl" value="${xMessageTtl}" value-type="java.lang.Long"/>
    	</rabbit:queue-arguments>
	</rabbit:queue>

	<rabbit:queue name="${dlgQueueName}" declared-by="containerAdmin"/>

	<rabbit:direct-exchange name="dlx" declared-by="containerAdmin">
    	<rabbit:bindings>
        	<rabbit:binding key="${queues}" queue="${dlgQueueName}"/>
    	</rabbit:bindings>
	</rabbit:direct-exchange>

	<rabbit:admin id="containerAdmin" connection-factory="rabbitConnectionFactory"
		auto-startup="true" />

	<bean id="messageConverter" class="${converterClass}" />
	
	<int:channel id="output" />

	<rabbit:connection-factory id="rabbitConnectionFactory"
		connection-factory="connectionFactory"
		addresses="${addresses}"
		virtual-host="${vhost}"
		username="${username}" password="${password}" />

	<bean id="connectionFactory" class="org.springframework.xd.dirt.integration.rabbit.RabbitConnectionFactoryBean">
		<property name="useSSL" value="${useSSL}" />
		<property name="sslPropertiesLocation" value="${sslPropertiesLocation}"/>
	</bean>

</beans>
