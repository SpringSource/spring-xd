spring:
  profiles:
    active: default
  main:
    show_banner: false
endpoints:
  jolokia:
    enabled: ${XD_JMX_ENABLED:true}
  jmx:
    enabled: ${XD_JMX_ENABLED:true}
    uniqueNames: true

XD_ANALYTICS: ${analytics:redis}
XD_TRANSPORT: ${xd.transport:${transport:redis}}
XD_HOME: ${xdHomeDir:..}
XD_JMX_ENABLED: true

xd:
  data:
    home: file:${XD_HOME}/data
  config:
    home: file:${XD_HOME}/config
  module:
    home: file:${XD_HOME}/modules
  ui:
    home: file:${XD_HOME}/spring-xd-ui/dist/
    allow_origin: http://localhost:9889
  extensions:
       basepackages:
       locations: META-INF/spring-xd/ext
  container:
    groups: ${XD_CONTAINER_GROUPS:}
  messagebus:
    rabbit:
      default:
        ackMode:                   AUTO
            # Valid: AUTO (container acks), NONE (broker acks), MANUAL (consumer acks).
            # Upper case only.
            # Note: MANUAL requires specialized code in the consuming module and is unlikely to be
            # used in an XD application. For more information, see
            # http://docs.spring.io/spring-integration/reference/html/amqp.html#amqp-inbound-ack
        backOffInitialInterval:    1000
        backOffMaxInterval:        10000
        backOffMultiplier:         2.0
        concurrency:               1
        maxAttempts:               3
        maxConcurrency:            1
        prefix:                    xdbus.
            # prefix for queue/exchange names so policies (ha, dle etc.) can be applied
        prefetch:                  1
        replyHeaderPatterns:       STANDARD_REPLY_HEADERS,*
        requestHeaderPatterns:     STANDARD_REQUEST_HEADERS,*
        requeue:                   true
        transacted:                false
        txSize:                    1
---

server:
  port: ${PORT:9393}
management:
  port: ${XD_MGMT_PORT:${PORT:9393}}
  contextPath: /management
---
zk:
  client:
    connect: ${ZK_CLIENT_CONNECT:}

---
spring:
  profiles: rabbit
transport: rabbit
---

spring:
  profiles: cloud
xdHomeDir: .

---

# XD admin profile
spring:
  profiles: admin
---

# XD container profile
spring:
  profiles: container
server:
  port: ${PORT:0}
management:
  port: ${XD_MGMT_PORT:${PORT:}}
  contextPath: /management
---

spring:
  profiles: local
  datasource:
    url: jdbc:mysql://localhost/test
    username: root
    password:
    driverClassName: com.mysql.jdbc.Driver
---

spring:
  profiles: singlenode
transport: local
analytics: memory
embeddedHsql: true

---

# HSQL database configuration
 spring:
   datasource:
    url: jdbc:hsqldb:hsql://${hsql.server.host:localhost}:${hsql.server.port:9101}/${hsql.server.dbname:xdjob}
    username: sa
    password:
    driverClassName: org.hsqldb.jdbc.JDBCDriver
---

# Redis properties
# (vcap.services.* binds to a service called 'redis' in Pivotal CF)
spring:
  redis:
   port: ${vcap.services.redis.credentials.port:6379}
   host: ${vcap.services.redis.credentials.hostname:localhost}
   pool.maxIdle: 8
   pool.minIdle: 0
   pool.maxActive: 8
   pool.maxWait: -1

---
# RabbitMQ properties
# (vcap.services.* binds to a service called 'rabbitmq' in Pivotal CF)
spring:
  rabbitmq:
   host: ${vcap.services.rabbitmq.credentials.hostname:localhost}
   port: ${vcap.services.rabbitmq.credentials.port:5672}
   username: ${vcap.services.rabbitmq.credentials.username:guest}
   password: ${vcap.services.rabbitmq.credentials.password:guest}
   virtual_host: ${vcap.services.rabbitmq.credentials.vhost:/}

---
# Hadoop properties
spring:
  hadoop:
   fsUri: hdfs://localhost:8020
